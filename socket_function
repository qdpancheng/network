1、main和_tmain  以及  wmain的区别

_tmain()是unicode版本的的main()   

_tmain这个符号多见于VC++创建的控制台工程中，这个是为了保证移植unicode而加入的（一般_t、_T、T()这些东西都和unicode有关系），对于使用非unicode字符集的工程来说，实际上和main没有差别（其实就算是使用unicode字符集也未必有多大的差别）。

1。 main是C程序的函数，_tmain是main为了支持unicode所使用的main的别名
2。 _tmain的定义在<tchar.h>可以找到,如#define _tmain main，所以要加＃i nclude <tchar.h>才能用。

3。因此_tmain compile后仍为main，所以都可以执行

另外,wmain也是main的另一个别名,是为了支持二个字节的语言环境

/*********************************************************************************************
                                  socket编程基本流程
WSAStartup()--->socket()--->bind()---->listen()----->accept()----->recv()等---->closesocket(Server)
初始化socket    建立socket     绑定      开始监听                  接收数据              |
                                                               释放资源       关闭socket |
                                                              WSACleanup()<----closesocket(Client)
*********************************************************************************************/

2、winsocket相关函数释读
2.1   WSAStartup
                        int WSAStartup(
                          _In_  WORD      wVersionRequested,
                          _Out_ LPWSADATA lpWSAData
                        );
Parameters
wVersionRequested [in]
The highest version of Windows Sockets specification that the caller can use. The high-order byte specifies the minor version number; the low-order byte specifies the major version number.
lpWSAData [out]
A pointer to the WSADATA data structure that is to receive details of the Windows Sockets implementation.
Return value
If successful, the WSAStartup function returns zero. Otherwise, it returns one of the error codes listed below.
注释：
  进行socket编程前必须先调用该函数，该函数的第一个参数确定了socket的版本号，第二个参数是将winsocket的实现细节存储下来。只有成功的调用
了个该函数后才能继续调用socket的其他函数。当调用完socket函数用，需要调用函数WSACleanup来释放内部的winsocket资源。应用程序对每个成功调
用的WSAStartup函数都要有对应的WSACleanup,例如一个应用程序调用了WSAStartup三次，那么就必须调用WSACleanup，其中，前两次调用WSACleanup什么
事情也没做，只是对内部计数器减1，最后一次WSACleanup才会释放socket所占用的系统资源。

2.2         socket
                      SOCKET WSAAPI socket(
                        _In_ int af,
                        _In_ int type,
                        _In_ int protocol
                      );
af [in]
The address family specification. Possible values for the address family are defined in the Winsock2.h header file.
type [in]
The type specification for the new socket. Possible values for the socket type are defined in the Winsock2.h header file.
protocol [in]
The protocol to be used. The possible options for the protocol parameter are specific to the address family and socket type specified. 
Possible values for the protocol are defined in the Winsock2.h and Wsrm.h header files.
Return value
If no error occurs, socket returns a descriptor referencing the new socket. Otherwise, a value of INVALID_SOCKET is returned, and a 
specific error code can be retrieved by calling WSAGetLastError.
注释：
  

